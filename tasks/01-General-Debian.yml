- name: copy apt_keys
  copy:
   src: "{{item.src}}"
   dest: "{{item.dest}}" #/{{item.src}}"
#   checksum: yes
  with_items: "{{apt_keys}}"
#  notify:

# - name: apt-key install
#   apt_key:
#    file: "{{item.dest}}/{{item.src}}"
#    state: present
#   with_items: "{{apt_keys}}"

- debug: msg='apt_proxy is empty'
  when: apt_proxy is not defined

- name: "apt: proxy setup install"
  template:
    src: apt-00proxy.j2
    dest: /etc/apt/apt.conf.d/00proxy
    owner: root
    group: root
  when: apt_proxy is defined and apt_proxy_disable is not defined

- name: "apt: proxy setup remove"
  file:
   path: "/etc/apt/apt.conf.d/00proxy"
   state: absent
  when: apt_proxy is not defined or apt_proxy_disable is defined

- name: stat sources.list
  stat:
    path: /etc/apt/sources.list
  register: sl


- name: Move sources.list to sources.list.backup
  command: mv /etc/apt/sources.list /etc/apt/sources.list.backup
  when: sl.stat.exists and apt_sourceslist is defined

- apt_repository:
   repo: "{{item}}"
   state: present
   mode: 0666
  with_items: "{{apt_sourceslist}}"
  when: apt_sourceslist is defined

- name: "install list"
  apt:
   pkg: "{{ apt_packages }}"
   state: latest
   cache_valid_time: "{{60 * 60 * 6 }}"

- name: install Cocpit from backport
  apt:
   pkg: ['cockpit', 'cockpit-system', 'cockpit-storaged', 'cockpit-dashboard', 'cockpit-networkmanager', 'cockpit-packagekit', 'cockpit-ws', 'cockpit-bridge']
   state: latest
   default_release: "{{ ansible_lsb['codename'] }}-backports"
  ignore_errors: yes
  when: cockpit_disable is not defined
  

- name: upgrade, autoclean and autoremove packages
  apt:
   upgrade: yes
   autoremove: yes
   autoclean: yes


- name: "LLDPd: enable SNMP subagent and enable CDP SONMP and EDP protocol"
  lineinfile:
    path: /etc/default/lldpd
    regexp: '#DAEMON_ARGS="-x -c -s -e"'
    line: 'DAEMON_ARGS="-x -c -s -e"'
  notify: lldpd restarted

- name: Check if a reboot is required
  stat:
   path: /var/run/reboot-required
   get_checksum: no
  register: reboot_required_file
  notify: Reboot

- debug:
    var: reboot_required_file
